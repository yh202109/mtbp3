:py:mod:`mtbp3.util.emt`
========================

.. py:module:: mtbp3.util.emt


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   mtbp3.util.emt.Emt




.. py:class:: Emt(folder_name='')


   A class representing MedDRA terms.

   This class provides methods to interact with the Emt object,
   including listing files associated with the Emt.

   .. attribute:: folder_name

      The folder name associated with the Emt.

      :type: str

   .. attribute:: lsr

      An instance of the LsrTree class for listing files.

      :type: LsrTree

   .. attribute:: month

      The month of the version published.

      :type: str

   .. attribute:: year

      The year of the version published.

      :type: str

   .. py:method:: expected_file_lists()

      Get the three lists of files associated with the Emt.

      :returns: A tuple containing three lists of file names.
      :rtype: tuple


   .. py:method:: find_files()

      Find all expected files associated with the Emt.

      :returns: A list of missing file names.
      :rtype: list


   .. py:method:: list_files()

      List all files associated with the Emt.

      :returns: A list of file names.
      :rtype: list


   .. py:method:: find_soc(terms=[], ignore_case=False)

      Find all unique SOC (System Organ Class) terms.

      :param terms: The specific SOC name(s) to filter the results. Defaults to an empty list.
      :type terms: list, optional
      :param ignore_case: Flag to indicate whether to ignore case sensitivity when filtering terms. Defaults to False.
      :type ignore_case: bool, optional

      :returns: A list of unique SOC terms. If terms is provided, it returns the corresponding ids.
      :rtype: list

      :raises AssertionError: If terms is not a list.


   .. py:method:: find_hlgt(terms=[], ignore_case=False)

      Find all unique HLGT terms.

      :param terms: The specific HLGT name(s) to filter the results. Defaults to an empty list.
      :type terms: list, optional
      :param ignore_case: Flag to indicate whether to ignore case sensitivity when filtering terms. Defaults to False.
      :type ignore_case: bool, optional

      :returns: A list of unique HLGT terms. If terms is provided, it returns the corresponding ids.
      :rtype: list

      :raises AssertionError: If terms is not a list.


   .. py:method:: find_hlt(terms=[], ignore_case=False)

      Find all unique HLT terms.

      :param terms: The specific HLT name(s) to filter the results. Defaults to an empty list.
      :type terms: list, optional
      :param ignore_case: Flag to indicate whether to ignore case sensitivity when filtering terms. Defaults to False.
      :type ignore_case: bool, optional

      :returns: A list of unique HLT terms. If terms is provided, it returns the corresponding ids.
      :rtype: list

      :raises AssertionError: If terms is not a list.


   .. py:method:: find_pt(terms=[], ignore_case=False)

      Find all unique PT terms.

      :param terms: The specific PT name(s) to filter the results. Defaults to an empty list.
      :type terms: list, optional
      :param ignore_case: Flag to indicate whether to ignore case sensitivity when filtering terms. Defaults to False.
      :type ignore_case: bool, optional

      :returns: A list of unique PT terms. If terms is provided, it returns the corresponding ids.
      :rtype: list

      :raises AssertionError: If terms is not a list.


   .. py:method:: find_llt(terms=[], ignore_case=False)

      Find all unique LLT terms.

      :param terms: The specific LLT name(s) to filter the results. Defaults to an empty list.
      :type terms: list, optional
      :param ignore_case: Flag to indicate whether to ignore case sensitivity when filtering terms. Defaults to False.
      :type ignore_case: bool, optional

      :returns: A list of unique LLT terms. If terms is provided, it returns the corresponding ids.
      :rtype: list

      :raises AssertionError: If terms is not a list.


   .. py:method:: load_llt(unique=True)


   .. py:method:: all_str_digit(lst)

      Check if all elements in a given list are strings containing only digits.

      :param fin: The list to check.
      :type fin: list

      :returns: True if all elements in the list are strings containing only digits, False otherwise.
      :rtype: bool


   .. py:method:: find_term_wi_level(terms=[], ignore_case=False, level=1)

      Find all unique terms.

      :param terms: The specific SOC name(s) to filter the results. Defaults to an empty list.
      :type terms: list, optional
      :param ignore_case: Flag to indicate whether to ignore case sensitivity when filtering terms. Defaults to False.
      :type ignore_case: bool, optional
      :param level: The level of the SOC hierarchy to consider. Defaults to 1.
      :type level: int, optional

      :returns: A list of unique terms. If terms is provided, it returns the corresponding ids.
      :rtype: list

      :raises AssertionError: If terms is not a list.


   .. py:method:: find_pt_given_soc(soc, primary_soc_only=False, ignore_case=False)

      Find all PTs (Preferred Terms) given a SOC (System Organ Class) name.

      :param soc: The name of the SOC or a list of SOC names.
      :type soc: str or list
      :param primary_soc_only: If True, only return PTs associated with the primary SOC.
                               Defaults to False.
      :type primary_soc_only: bool, optional

      :returns:

                A DataFrame containing the PTs associated with the given SOC.
                                    Each row represents a PT and contains the PT code and PT name.
      :rtype: pandas.DataFrame


   .. py:method:: find_llt_given_pt(pt, ignore_case=False)

      Find all LLTs (Lowest Level Terms) given a PT (Preferred Term) name or a list of PT names.

      :param pt: The name of the PT or a list of PT names.
      :type pt: str or list

      :returns:

                A DataFrame containing the LLTs associated with the given PT(s).
                                    Each row represents an LLT and contains the LLT code and LLT name.
      :rtype: pandas.DataFrame


   .. py:method:: find_llt_given_soc(soc, primary_soc_only=False, ignore_case=False)

      Find all LLTs (Lowest Level Terms) given a SOC (System Organ Class) name.

      :param soc_name: The name of the SOC.
      :type soc_name: str
      :param primary_soc_only: If True, only return LLTs associated with the primary SOC.
                               Defaults to False.
      :type primary_soc_only: bool, optional

      :returns:

                A DataFrame containing the LLTs associated with the given SOC.
                                    Each row represents an LLT and contains the LLT code and LLT name.
      :rtype: pandas.DataFrame



