mtbp3.seq.ictvvmrview
=====================

.. py:module:: mtbp3.seq.ictvvmrview


Classes
-------

.. autoapisummary::

   mtbp3.seq.ictvvmrview.ictvvmr


Module Contents
---------------

.. py:class:: ictvvmr(vmr_file_path='')

   A class to handle ICTV Virus Metadata Resource (VMR) data.

   .. attribute:: msl_file_path

      str
      Path to the VMR file.

   .. attribute:: msl_file_fullpath

      str
      Full path to the VMR file.

   .. attribute:: msl_version

      str
      Version of the VMR.

   .. attribute:: msl_column_names

      list
      List of column names in the VMR.

   .. attribute:: msl

      DataFrame
      The VMR data loaded into a pandas DataFrame.

   .. method:: update_vmr(self, version="current")

      
      Updates the VMR data by downloading the specified version from the ICTV website.

   .. method:: make_narrow(vmr)

      
      Converts the MSL DataFrame to a narrower format by combining certain columns.

   .. method:: find_rows_given_str(self, search_str="", search_rank="Species", color="", narrow=False, outfmt="simple", exact=False, search_within_subset=None)

      
      Finds rows in the VMR DataFrame that contain the given search string.
      


   .. py:attribute:: vmr_column_names
      :value: []



   .. py:attribute:: vmr
      :value: None



   .. py:method:: update_vmr(version='current')


   .. py:method:: make_narrow(vmr, method='concatenation')
      :staticmethod:



   .. py:method:: __load_list()


   .. py:method:: find_rows_given_str(search_strings=None, search_rank='Species', color='', narrow=False, outfmt='simple', exact=False, search_within_subset=None, tree_style='concatenation')

      Find rows in the dataset that match the given search strings.

      :param search_strings: A list of strings or a single string to search for in the dataset.
      :type search_strings: list or str
      :param search_rank: The rank to search within (default is "Species"). Can be "all" or one of the column names in the dataset.
      :type search_rank: str
      :param color: Color to highlight the search strings in the results (default is "").
      :type color: str
      :param narrow: Whether to narrow the results (default is False).
      :type narrow: bool
      :param outfmt: The output format, either "simple" or "tree" (default is "simple").
      :type outfmt: str
      :param exact: Whether to match the search strings exactly (default is False).
      :type exact: bool
      :param search_within_subset: A dictionary specifying a subset of the dataset to search within (default is None).
      :type search_within_subset: dict
      :param tree_style: The style of the tree output if outfmt is "tree" (default is "concatenation").
      :type tree_style: str

      :returns: The filtered dataset in the specified format. If outfmt is "simple", returns a DataFrame. If outfmt is "tree", returns a string representing the tree structure.
      :rtype: pandas.DataFrame or str

      :raises TypeError: If search_strings is not a list or a string, or if search_within_subset is not a dictionary or None.
      :raises ValueError: If search_strings is empty, or if search_rank is not "all" and not in the column names, or if outfmt is not "simple" or "tree".



