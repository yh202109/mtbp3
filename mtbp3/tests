import warnings
warnings.filterwarnings("ignore", category=DeprecationWarning)

import unittest
import pandas as pd
from mtbp3.util.cdt import diff_two_columns

class TestCdt(unittest.TestCase):
    def setUp(self):
        self.df = pd.DataFrame({'ARM': [1, 2, 3, 4], 'ACTARM': [1, 2, 5, 4]})

    def test_diff_two_columns_with_difference(self):
        expected_output = pd.DataFrame({'ARM': [3], 'ACTARM': [5], 'diff': ['True']})
        result = diff_two_columns(self.df)
        self.assertTrue(isinstance(result, pd.DataFrame))
        self.assertEqual(len(result), len(self.df)) 

    def test_diff_two_columns_without_difference(self):
        expected_output = "Columns should be different."
        result = diff_two_columns(self.df[['ARM', 'ARM']], 'ARM', 'ARM')
        self.assertEqual(result, expected_output)

    def test_diff_two_columns_invalid_input(self):
        expected_output = "Input is not a DataFrame."
        result = diff_two_columns("not a dataframe")
        self.assertEqual(result, expected_output)

    def test_diff_two_columns_missing_column(self):
        expected_output = "Column 'COL' does not exist in the DataFrame."
        result = diff_two_columns(self.df, col1='COL')
        self.assertEqual(result, expected_output)

if __name__ == "__main__":
    unittest.main()